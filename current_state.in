formulas(assumptions).
% Game Rules and Logic
room(room1).
room(room2).
room(exit).
door(door1).
door(door2).
connects(door1, room1, room2).
connects(door2, room2, exit).
key(key1).
key(key2).
opens(key1, door1).
opens(key2, door2).
puzzle(puzzle1).
puzzle(puzzle2).
all X (correct_answer(X, puzzle1) -> solved(X, puzzle1)).
all X (solved(X, puzzle1) -> has(X, key1)).
all X (correct_answer(X, puzzle2) -> solved(X, puzzle2)).
all X (solved(X, puzzle2) -> has(X, key2)).
trap(trap1).
all X all Y (room(Y) & (all Z (trap_in_room(Y, Z) -> disarmed(Z))) -> safe(X, Y)).
trap_in_room(room2, trap1) -> disarmed(trap1).
disarmed(trap1) -> trap_in_room(room2, trap1).
all X all Y all A all B (door(Y) & connects(Y, A, B) & open(Y) & at(X, A) -> can_move(X, A, B)).
all X all Y all K (has(X, K) & opens(K, Y) & action_open_door(X, Y) -> open(Y)).

% Current State
at(player,room2).
has(player,key1).
solved(player,puzzle1).
solved(player,puzzle2).
open(door1).
disarmed(trap1).
end_of_list.

formulas(goals).
solved(player,puzzle2).
end_of_list.
